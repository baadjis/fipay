syntax = "proto3";

package transaction;

service TransactionService {
 rpc AddTransaction (Transaction) returns ( TransactionResponse){};
 rpc GetTransaction (TransactionFilter ) returns ( stream TransactionResponse){};
 rpc AddCustomer(Customer) returns (CustomerResponse){};
 rpc GetCustomer(CustomerFilter) returns ( stream Customer){};
 rpc GetCustomerTransactions(CustomerFilter) returns (CustomerTransactions){};
 rpc GetAgentTransactions (AgentFilter) returns (stream AgentTransactions){};
 
}


message Customer {
    int32  id = 1;
    string fullname=2;
    string country = 3;
    string email  = 4;
    string phone  = 5;
}

message Details {
    float sentAmount =1;
    string sentCurrency =2;
    float receivedAmount =3;
    string receivedCurrency=4 ;
    string payemenMode = 5 ;
    string receptionMode = 6;
    string xchange   = 7;
    string fees   = 8;
}

message Transaction {
    string txcode=1;
    string sendAgenceId =2;
    string receptionAgenceId=3;
    string senderId =4;
    string receiverId =5;
    Details details =6;
    string status =7;
}
message CustomerResponse{
   Customer customer =1;
   Error  error =2;
}
message DetailsResponse {
    Details details = 1;
    Error error = 2;
}

message Error {
    string message = 1;
}
message CustomerTransactions{
    repeated Transaction transactions = 1;
}
message TransactionResponse{
    Transaction transaction = 1;
    Error error = 2;
}
message AgentTransactions {
    repeated Transaction transactions = 1;
}


message CustomerFilter {    
    int32 id = 1;
}

message  TransactionFilter {
    string txcode =1;
}
message AgentFilter {
    string AgentId=1;
}

message Empty {
}